JAVA SCRIPT METHOD
------------------------

1. typeOf()
2. indexOf()
3. filter()
4. map()
5. includes()
6. sort()
7. split()
8. math.random()
9. Array.from()
10. join()
11. length()
12. setTimeOut()
13. forEach()
14. push()
15. reduce()
16. every()
17. toString()
18. getDate()
19. getMonth()
20. getFullYear()
21. Math.min()
22. Math.max()
23. flatMap()  all value store in one array(arrayer vitor array tar vitor arek array)
24. reverse()

PHP Method
--------------
1. array_unique($value) .Remove duplicate value in array.
2. count()  -> Return the number of elements
3. array_filter()
4. sort()
5. min()
6. max()
7. round()
8. rand()
9. sqrt()
10. abs()
11. pi()
12. is_int()
13. strrev() to reverse
14. strlen
15. str_word_count
16. htmlscpecialchars()
17. trim() -> Remove character
18. explode() -> string to arrary
19. implode() -> join array elements with a string
20. char() -> char to key value
21. floor()
22. array_differnce($a,$b) -> only difference value return between two arrays
23. array_map(function,array)
24. array_merge() -> দুইটা এরে প্যারামিটার আকারে যায়। দুইটা এরেকে একটা এরেতে নিয়ে আসে।
25. array_push -> push an element to end of array
26. array_sum() -> return the sum of the value an array
27. compact() -> return an aray to some of variable to their value
28. in_array() -> search a value in an array
29. sizeof() -> return number of array element
 
 
 
SQL 
------------------------------------------------------------------------------------------------------
				Method of SQL
				-------------
	1. replace(string,to the replace,by the replace)
	2. length(string)
	3. left(string,1(which to start))
	4. right(string,1(which to start))
	5. distinct(string)
	6. limt 1
	7. in(parameter to search box)
	8. floor()
	9. ceiling()
	10. avg()
	11. sum()
	12. count()
	
	
------------------------------------------------------------------------------------------------------	

	1. FIND OUT DIFFERENCE BETWEEN TOTAL ENTRY TO DISTRINT ENTRTY

	SELECT COUNT(CITY) - COUNT(DISTRINCT CITY) FROM STATION;
	
	2. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). 
	If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
	
	SELECT CITY, LENGTH(CITY) FROM STATION WHERE ID = (SELECT ID FROM STATION ORDER BY LENGTH(CITY) DESC, CITY ASC LIMIT 1 ) OR
	ID = (SELECT ID FROM STATION ORDER BY LENGTH(CITY) ASC, CITY ASC LIMIT 1 ) ORDER BY CITY;
	
	3. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. 
	Your result cannot contain duplicates.
	
	SELECT DISTINCT(CITY) FROM STATION WHERE LEFT(CITY,1) IN ('A','E','I','O','U') ORDER BY CITY ASC;
	
	LEFT(CITY, 1) is starting from the left side of the string and getting the character up to the first place.
	The number is how many places to go from the left, so if you had LEFT(CITY, 3) it would get the first 3 characters.
	
	4. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
	
	SELECT DISTINCT(CITY) FROM STATION WHERE RIGHT(CITY,1) IN ('A','E','I','O','U') ORDER BY CITY ASC; or
	SELECT DISTINCT CITY FROM STATION WHERE CITY RLIKE '.*[aeiou]$';
	
	5. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. 
	Your result cannot contain duplicates.
	
	select distinct(city) from station where (left(city,1) in ('a','e','i','o','u')) and (right(city,1) in ('a','e','i','o','u'));
	
	6. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
	
		select distinct(city) from station where not left(city,1) in ('a','e','i','o','u');
		
	7. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
		
		select distinct(city) from station where not right(city,1) in ('a','e','i','o','u');
		
	8. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
	
		select distinct city from station where city rlike '^[^AEIOU]' or city rlike '[^aeiou]$';
		
	9. Query the list of CITY names from STATION that do not start with vowels and do not end with vowels.
		Your result cannot contain duplicates.
	
		select distinct(city) from station where not (left(city,1) in ('a','e','i','o','u'))
		and not (right(city,1) in ('a','e','i','o','u'));
	
		
	10. Query the Name of any student in STUDENTS who scored higher than 75 Marks. Order your output by the last three characters of each name. 
		If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.),
		secondary sort them by ascending ID.
		
		select name from students where marks > 75 order by right(name,3) asc, id asc;
		
	11. Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.
		
		select name from employee order by name asc;
		
	12. Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a 
		salary greater than 2000 per month who have been employees for less than 10 months. 
		Sort your result by ascending employee_id.
 
		select name from employee where salary > 2000 and months < 10 order by  employee_id asc;
		
	13. Query a count of the number of cities in CITY having a Population larger than 100000.
	
		select count(population) from city where population > 100000;
		
	14. Query the total population of all cities in CITY where District is California.
	
		select sum(population) from city where district = 'California';
		
	15. Query the average population of all cities in CITY where District is California.
	
		select avg(population) from city where district = 'California';
		
	16. Query the average population for all cities in CITY, rounded down to the nearest integer.
	
		select floor(avg(population)) from city;
		
	17. Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.
	
		select sum(population) from city where countrycode='JPN';
		
	18. Query the difference between the maximum and minimum populations in CITY.
	
		select max(population) - min(population) from city;
		
	19. Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table,
		but did not realize her keyboard's  key was broken until after completing the calculation. She wants your help finding the 
		difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
		Write a query calculating the amount of error (i.e.: actual-miscalculated average monthly salaries), and round it up to the next integer.
		
		select ceiling(avg(salary)-avg(replace(salary,0,''))) from employees; 
		
	20. 